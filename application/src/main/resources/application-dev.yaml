spring:
  config:
    activate:
      on-profile: "dev"

  threads:
    virtual:
      enabled: true

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DATABASE_URL}
    username: ${DATABASE_USER_NAME}
    password: ${DATABASE_USER_PWD}

    hikari:
      transaction-isolation: TRANSACTION_REPEATABLE_READ
      maximum-pool-size: 10
      #      minimum-idle: 10
      connection-timeout: 5000
      validation-timeout: 3000
      connection-test-query: SELECT 1
      idle-timeout: 600000
      max-lifetime: 1800000
      pool-name: hikari_pool


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        default_batch_fetch_size: 1000

  kafka:
    bootstrap-servers: ["kafka:port"]
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: codeCompanion
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      max-poll-records: 1000

server:
  port: 9000
  servlet:
    session:
      timeout: 5000

logging:
  level:
    org.springframework.transaction: debug
    org.hibernate.sql: debug

management:
  endpoint:
    logfile:
      external-file: ~/logback.log
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,loggers,metrics,mappings,threaddump,conditions,info,heapdump
      base-path: /api/actuator
      path-mapping:
        loggers: logs
        httptrace: trace

slack:
  app:
    api:
      token: ${SLACK_API_TOKEN}
    mode:
      publisher: cdc
      cdc:
        topic: cdc.code_companion.outbox_message